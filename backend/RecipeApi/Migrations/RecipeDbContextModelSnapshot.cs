// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeApi.Infrastructure;

#nullable disable

namespace RecipeApi.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    partial class RecipeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeApi.Features.Recipes.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CookTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CookTimeMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int?>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookTime = "20 minutes",
                            CreatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(8520),
                            Description = "A traditional Italian pasta dish with eggs, cheese, and pancetta",
                            Difficulty = "Medium",
                            ImageUrl = "/api/placeholder/300/200",
                            Ingredients = "",
                            Instructions = "",
                            Title = "Classic Spaghetti Carbonara",
                            UpdatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(8680)
                        },
                        new
                        {
                            Id = 2,
                            CookTime = "45 minutes",
                            CreatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9090),
                            Description = "Creamy and flavorful Indian curry with tender chicken pieces",
                            Difficulty = "Medium",
                            ImageUrl = "/api/placeholder/300/200",
                            Ingredients = "",
                            Instructions = "",
                            Title = "Chicken Tikka Masala",
                            UpdatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9090)
                        },
                        new
                        {
                            Id = 3,
                            CookTime = "25 minutes",
                            CreatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9090),
                            Description = "Soft and chewy homemade cookies with chocolate chips",
                            Difficulty = "Easy",
                            ImageUrl = "/api/placeholder/300/200",
                            Ingredients = "",
                            Instructions = "",
                            Title = "Chocolate Chip Cookies",
                            UpdatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9090)
                        },
                        new
                        {
                            Id = 4,
                            CookTime = "15 minutes",
                            CreatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9100),
                            Description = "Fresh romaine lettuce with homemade caesar dressing and croutons",
                            Difficulty = "Easy",
                            ImageUrl = "/api/placeholder/300/200",
                            Ingredients = "",
                            Instructions = "",
                            Title = "Caesar Salad",
                            UpdatedAt = new DateTime(2025, 10, 16, 10, 38, 19, 247, DateTimeKind.Utc).AddTicks(9100)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
